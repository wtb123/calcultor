<?php

namespace common\models;

use common\Tags;
use yii\helpers\Html;
use Yii;

/**
 * This is the model class for table "post".
 *
 * @property int $id
 * @property string $title
 * @property string $content
 * @property string $tags
 * @property int $status
 * @property int $create_time
 * @property int $update_time
 * @property int $author_id
 *
 * @property Comment[] $comments
 * @property Poststaus $status0
 * @property Adminuser $author
 */
class Post extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    private $_oldTags;
    public static function tableName()
    {
        return 'post';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['content', 'tags'], 'string'],
            [['status', 'create_time', 'update_time', 'author_id'], 'integer'],
            [['title'], 'string', 'max' => 128],
            [['status'], 'exist', 'skipOnError' => true, 'targetClass' => Poststaus::className(), 'targetAttribute' => ['status' => 'id']],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => Adminuser::className(), 'targetAttribute' => ['author_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '标题',
            'content' => '内容',
            'tags' => '标签',
            'status' => '文章状态',
            'create_time' => '创建时间',
            'update_time' => '更新时间',
            'author_id' => '作者',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(Comment::className(), ['post_id' => 'id']);
    }
    public function getactiveComments()
    {
        return $this->hasMany(Comment::className(), ['post_id' => 'id'])
            ->where('status=:status',[':status'=>2])->orderBy('id DESC');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStatus0()
    {
        return $this->hasOne(Poststaus::className(), ['id' => 'status']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAuthor()
    {
        return $this->hasOne(Adminuser::className(), ['id' => 'author_id']);
    }

    /**
     * 重写beforeSave()函数，插入文章、修改文章时候自动保存时间
     */
    public function  beforeSave($insert)
    {
        if (parent::beforeSave($insert))
        {
            if ($insert)
            {
                $this->create_time = time();
                $this->update_time = time();
            }
            else
            {
                $this->update_time=time();
            }
            return true;
        }
        else
        {
            return false;
        }
    }

    /**
     * 重写afterFind()函数,保存老标签字符串是为了方便修改文章时候，好修改标签Frequency
     */
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->_oldTags=$this->tags;

    }
   public function afterSave($insert, $changedAttributes)
   {
       parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
       Tag::updateFrequency($this->_oldTags,$this->tags);
   }
   public function afterDelete()
   {
       parent::afterDelete(); // TODO: Change the autogenerated stub
       Tag::updateFrequency($this->tags,'');
   }

    /**增加一个url属性
     * @return string
     */
   public function getUrl()
   {
       return Yii::$app->urlManager->createUrl(
         [  'post/detail',
             'id'=>$this->id,
             'title'=>$this->title]
       );
   }

   public function getBeginning($length=288)
   {
       $tmpStr=strip_tags($this->content);
       $tmpLen=mb_strlen($tmpStr);

       $temStr=mb_substr($tmpStr,0,$length,'utf-8');
       return $tmpStr.(($tmpLen>288)?'...':'');
   }

   public function getTagLinks()
   {
       $links=array();
       foreach(Tag::string2array($this->tags) as $tag)
       {
           $links[]=Html::a(Html::encode($tag),array('post/index','PostFrontSearch[tags]'=>$tag));
       }
       return $links;
   }

    public function getCommentCount()
    {
        return Comment::find()->where(['post_id'=>$this->id,'status'=>2])->count();
    }
}

